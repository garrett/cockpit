@mobile-button-size: 56px;

/* Navigation base, used for both desktop & mobile navigation */

.nav-item-pf-header {
    color: #fff;
    font-size: 16px;
    margin: 18px 20px 10px 20px;
}

.nav-pf-secondary-nav {
    background: #393f44;
    border-right: 1px solid #292e34;
    border-bottom: none;
    border-top: none;
    border-left: none;
    flex: none;
    z-index: -1;

    .list-group {
        border: none;
    }

    .list-group-item {
        padding: 0;
        background: inherit;
        border: none;

        &.active {
            background: #4d5258;
        }

        a {
            padding: 10px 15px;
            display: block;
            color: #d1d1d1;
        }
    }
}

#host-nav {
    overflow: visible;
    display: flex;
    flex-direction: column;
    min-width: 15em;
    position: relative;
    z-index: 2;

    /* Fade start and end of the host menu to indicate more content is available */

    .dropdown-toggle {
        position: relative;
        overflow: visible !important;
    }

    .dropdown-toggle:after,
    &:after {
        content: '';
        display: block;
        position: absolute;
        left: 0;
        right: 0;
        height: 2rem;
        pointer-events: none;
        z-index: 1;
        margin-right: 12px; // Accomodate scrollbars
    }

    .dropdown-toggle:after {
        background: linear-gradient(to bottom, #393f44, transparent);
        top: 100%;
        margin-top: 1px;
    }

    &:after {
        background: linear-gradient(to top, #393f44, transparent);
        bottom: 0;
        height: 4rem;
    }
}

#host-nav-item {
    display: none;

    &.dashboard-link {
        display: block;
    }
}

#machine-dropdown {
    flex: none;
    border-bottom: 1px solid #4d5258;
}

#host-apps {
    flex: 1 1 0;
    overflow-y: auto;
}

#main-navbar {
    li.dashboard-link:not(.active) {
        .fa {
            color: #72767b !important;
        }
    }
}

.flex-content {
    > iframe {
        height: 100%;
    }

    > .curtains-ct {
        position: static !important;
    }
}

/* Desktop navigation */
@media screen and (min-width: 768px) {
    #content {
        position: relative;
    }

    .flex-navbar {
        flex: none;
        min-width: 100%;
    }

    .flex-content {
        flex: auto;
    }

    .flex-body {
        position: relative;
        flex: auto;
        z-index: 3;
        display: flex;
    }

    .nav-pf-vertical {
        position: static !important;
        height: 100%;
        border-right-width: 0;
        top: 0;
    }

    .nav-sidebar-wrap {
        flex: none;
        z-index: 3;

        &:not(.expanded) {
            width: unit(@sidebar-width-sm, px);

            .nav-sidebar {
                width: unit(@sidebar-width-sm, px);
            }

            .list-group-item-value {
                opacity: 0;
                transition: opacity 150ms ease-out;
            }
        }
    }

    .nav-sidebar {
        position: relative;
        height: 100%;
        transition: all 150ms ease-out;
        box-shadow: 0 0;

        span.first-letter {
            font-size: 0px !important;
            color: #d1d1d1;

            &:first-letter {
                font-size: 22px !important;
            }
        }

        .fa {
            margin-left: -4px;
            margin-top: -1px;

            &:not(.first-letter) {
                font-size: 22px !important;
            }
        }

        .list-group-item {
            border-right-width: 0;
            overflow: hidden;

            &:focus {
                background: active;
            }
        }
    }

    .nav-sidebar-wrap:not(.expanded) .nav-sidebar:not(.clicked):hover {
        width: unit(@sidebar-width-full, px);
        box-shadow: 0 0 3px rgba(0,0,0,0.5), 0 0 32px rgba(0,0,0,0.75);
        transition-duration: 500ms;
        transition-timing-function: cubic-bezier(0,1.2,0.8,1);

        .list-group-item-value {
            transition-duration: 300ms;
            opacity: 1;
        }

        .first-letter {
            opacity: 0;
        }
    }

    .single-nav {
        .nav-sidebar {
            display: none;
        }

        .nav-sidebar-wrap {
            width: 0px;
        }

        .nav-pf-secondary-nav {
            left: 0px;
        }
    }

    .flex-layout {
        display: flex;
        width: 100vw;
        height: 100vh;
        flex-flow: column;
        align-content: stretch;
    }

    .flex-content {
        flex: auto;
    }
}

/* Mobile navigation */
@media screen and (max-width: 767px) {
    /* Use native mobile fonts (when available) for nav & menu text */
    .flex-navbar, .flex-body {
        font-family: roboto, san francisco, helvetica light, noto, helvetica, sans-serif;
        font-size: 14px;
        align-content: stretch;
        align-items: stretch;

        a {
            font-size: 14px !important;
            padding: 12px 15px;
        }
    }

    /* Layout UI in CSS grids
    (all mobile browsers support this new layout type)

    How this works:

    CSS grids version 1 is now implemented in all mobile browsers; we can use it.
    However, display: container and subgrids are not implemented in Chrome yet.
    To work around this, we do a little more complex gridding by overlapping
    child grids on top of the parent grid. We basically set up the main grid
    as with a gutter of @mobile-button-size ("56px") on the top, right side,
    and bottom. We then stretch the child grids to this.

    The elements are then assigned grid names with 'grid-area' and placed in the
    grid using 'grid-template-areas', based on their immediate parent (which is
    set as a grid display type).

    Some grid-areas override their template placement with grid-columns and
    grid-rows. The most notible being the navmenu, so that it can overlap
    content. The value for grid-colums is either a single number or first/last+1
    (which basically means go from first and stop when it hits the grid
    column/row _after_ the one you want to last fill).

    Note: Due to less, we have to wrap some of the values in ~"" so that they
    will be passed directly to the resulting CSS... else less will want to try
    to do math, which isn't want we want.

    Tip: Firefox dev tools let you visualize grids in the "layout" subtab of the
    "inspector" tab.
    */

    .flex-layout, .flex-body, .flex-navbar {
        display: grid;
        grid-template-columns: auto @mobile-button-size;
        grid-template-rows: @mobile-button-size 1fr @mobile-button-size;
        align-content: end;
    }

    .flex-layout {
        grid-template-areas:
            "content content"
            "content content"
            "nav topbar";

        height: 100%;
        width: 100%;
    }

    .flex-body {
        /* Stretch the nav wrapper to the same area on the parent grid */
        grid-column: ~"1/3";
        grid-row: ~"1/4";
        z-index: 2;

        /* Pass through mouse events */
        pointer-events: none;

        grid-template-areas:
            "content content"
            "content content"
            "nav empty";

        > * {
            /* Allow mouse events for children */
            pointer-events: auto;
        }
    }

    .flex-navbar {
        /* Create another child grid and stretch it to the parent grid */
        pointer-events: none;
        display: grid;
        background: transparent;
        border: none;

        grid-template:
            "notmenu menu menu"
            "notheader notheader header";

        grid-area: topbar;
        grid-column: ~"1/3"; /* Expand to the whole column */
        grid-row: ~"2/4";
        grid-template-rows: auto @mobile-button-size;
        grid-template-columns: minmax(@mobile-button-size, auto) auto @mobile-button-size;

        z-index: 3;

        > * {
            pointer-events: auto;
        }

        &:before,
        &:after {
            display: none;
        }
    }

    .navbar-header {
        grid-area: header;
        background: #292e34;
    }

    .navbar-collapse {
        grid-area: menu;
        align-self: end;
        background: #292e34;
    }

    .navbar-brand {
        display: none;
    }

    .navbar-toggle {
        float: right !important;
        margin: 0 !important;
        width: 100%;
        height: 100%;
    }

    .flex-content {
        display: block;
        grid-area: content;
        z-index: 1;

        > iframe {
            animation: navFadeIn 300ms;
        }
    }

    .nav-sidebar-wrap {
        grid-area: nav;
        z-index: 3;
        max-width: ~"calc(100vw - @{mobile-button-size})";
        overflow: auto;
        overflow-y: hidden;
        position: relative;

        /* Fade start and end of the dashboard switcher bar on mobile */

        &:before,
        &:after {
            content: '';
            display: block;
            position: absolute;
            top: 0;
            bottom: 0;
            width: 15px;
            pointer-events: none;
            z-index: 1;
        }

        &:before {
            background: linear-gradient(to right, #292e34, transparent);
            left: 0;
        }

        &:after {
            background: linear-gradient(to left, #292e34, transparent);
            right: 0;
        }
    }

    .nav-sidebar {
        position: static !important;
        width: auto;
        max-width: 100%;
        overflow: hidden;
        overflow-x: auto;

        ul, li {
            padding: 0;
            margin: 0;
        }

        .list-group-item {
            width: auto !important;
            height: 100% !important;
            margin: 0 !important;

            a {
                display: inline-block !important;
                padding: 5px 15px !important;
                padding: 0;
                text-align: center;
                width: auto !important;
                min-width: 20vw;
                width: 100% !important;
                height: @mobile-button-size !important;
                margin-bottom: 12px; // Hack to hide the scrollbar
            }

            &.active {
                z-index: 2;

                a {
                    background: #393f44 !important;
                }

                a:before {
                    // display: none !important;
                    bottom: 0 !important;
                    left: 0 !important;
                    right: 0 !important;
                    top: auto !important;
                    height: 3px !important;
                    width: auto !important;
                    z-index: 3;
                }
            }
        }

        .list-group {
            display: flex;

            li {
                flex: auto;
            }
        }

        .fa,
        .pficon-container-node {
            line-height: 1 !important;
            float: none !important;
            margin: 0 auto !important;
            font-size: 24px !important;
        }

        .list-group-item-value {
            font-weight: 400;
            line-height: 1 !important;
            margin: 0 auto !important;
            overflow: visible !important;
        }
    }

    #host-nav {
        align-self: end;
        grid-area: navmenu;
        height: 72mm;
        // Limit the menu's height to leave mobile-button space above and below
        max-height: ~"calc(100vh - (@{mobile-button-size} * 2))";
        grid-column: 1;
        grid-row: 2;
        z-index: 2;
        position: relative;
        animation: navSlideUp 600ms;

        .dropdown-menu {
            width: auto !important;
            left: @mobile-button-size / 2 !important;
            right: @mobile-button-size / -2 !important;
            animation: navFadeInSlideDown 600ms;
        }
    }

    .navbar-collapse > ul,
    #host-nav {
        box-shadow: 0 0 9px ~"rgba(0, 0, 0, 0.4)" !important;
    }
}

/* Navigation animation */

@keyframes navFadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}

@keyframes navFadeInSlideDown {
    from { opacity: 0; max-height: 0; }
    to { opacity: 1; max-height: auto; }
}

@keyframes navSlideUp {
    from {
        position: relative;
        overflow: hidden;
        bottom: ~"-100vh";
    }
    to { bottom: 0; }
}
